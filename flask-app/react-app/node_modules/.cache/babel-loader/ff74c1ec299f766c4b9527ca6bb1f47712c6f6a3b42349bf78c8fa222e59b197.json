{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mattb\\\\OneDrive\\\\Desktop\\\\Sentiment-Analysis-App\\\\flask-app\\\\react-app\\\\src\\\\components\\\\LoginScreen.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport LoginForm from './LoginForm';\n\n//bootstrap grid system divided into 12 columns\n//number parameter given expresses the width of the column as 12 divided by the parameter\n//ex: sm={8} means that on small screen devices, the column will take up (12/8)% of the screen\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction displayForm(isRegistered) {\n  if (isRegistered) {\n    return /*#__PURE__*/_jsxDEV(LoginForm, {\n      buttonText: \"Login\",\n      registerText: \"Don't have an account? Register here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(LoginForm, {\n      buttonText: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction LoginScreen(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"title sticky-lg-top sticky-md-top header\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sentiment Analysis App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Welcome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 6,\n            className: \"img-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.flaticon.com/512/5377/5377629.png\",\n              alt: \"emotion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","Container","Row","Col","LoginForm","jsxDEV","_jsxDEV","displayForm","isRegistered","buttonText","registerText","fileName","_jsxFileName","lineNumber","columnNumber","LoginScreen","props","children","className","lg","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/mattb/OneDrive/Desktop/Sentiment-Analysis-App/flask-app/react-app/src/components/LoginScreen.js"],"sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoginForm from './LoginForm';\r\n\r\n//bootstrap grid system divided into 12 columns\r\n//number parameter given expresses the width of the column as 12 divided by the parameter\r\n//ex: sm={8} means that on small screen devices, the column will take up (12/8)% of the screen\r\n\r\nfunction displayForm(isRegistered){\r\n    if(isRegistered){\r\n        return(\r\n            <LoginForm\r\n                buttonText = \"Login\"\r\n                registerText = \"Don't have an account? Register here!\"\r\n            />\r\n        );\r\n    }else{\r\n        return(\r\n            <LoginForm\r\n                buttonText = \"Register\"\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction LoginScreen(props){\r\n    return(\r\n        <div>\r\n            <Container className='title sticky-lg-top sticky-md-top header'>\r\n                <Row>\r\n                    <Col lg={3}><h4>Sentiment Analysis App</h4></Col>\r\n                </Row>\r\n            </Container>\r\n            <div className=\"login\">\r\n                <Container>\r\n                <Row>\r\n                    <Col lg={6}> \r\n                        <h2>Welcome</h2>\r\n                        \r\n                    </Col>\r\n                    <Col lg={6} className=\"img-container\">\r\n                        <img src=\"https://cdn-icons-png.flaticon.com/512/5377/5377629.png\" alt=\"emotion\"></img>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default LoginScreen;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,WAAWA,CAACC,YAAY,EAAC;EAC9B,IAAGA,YAAY,EAAC;IACZ,oBACIF,OAAA,CAACF,SAAS;MACNK,UAAU,EAAG,OAAO;MACpBC,YAAY,EAAG;IAAuC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAEV,CAAC,MAAI;IACD,oBACIR,OAAA,CAACF,SAAS;MACNK,UAAU,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAEV;AACJ;AAEA,SAASC,WAAWA,CAACC,KAAK,EAAC;EACvB,oBACIV,OAAA;IAAAW,QAAA,gBACIX,OAAA,CAACL,SAAS;MAACiB,SAAS,EAAC,0CAA0C;MAAAD,QAAA,eAC3DX,OAAA,CAACJ,GAAG;QAAAe,QAAA,eACAX,OAAA,CAACH,GAAG;UAACgB,EAAE,EAAE,CAAE;UAAAF,QAAA,eAACX,OAAA;YAAAW,QAAA,EAAI;UAAsB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACZR,OAAA;MAAKY,SAAS,EAAC,OAAO;MAAAD,QAAA,eAClBX,OAAA,CAACL,SAAS;QAAAgB,QAAA,eACVX,OAAA,CAACJ,GAAG;UAAAe,QAAA,gBACAX,OAAA,CAACH,GAAG;YAACgB,EAAE,EAAE,CAAE;YAAAF,QAAA,eACPX,OAAA;cAAAW,QAAA,EAAI;YAAO;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf,CAAC,eACNR,OAAA,CAACH,GAAG;YAACgB,EAAE,EAAE,CAAE;YAACD,SAAS,EAAC,eAAe;YAAAD,QAAA,eACjCX,OAAA;cAAKc,GAAG,EAAC,yDAAyD;cAACC,GAAG,EAAC;YAAS;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAACQ,EAAA,GAxBQP,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}