{"ast":null,"code":"var _jsxFileName = \"/Users/jaymerjacob/Documents/Sentiment-Analysis/flask-app/react-app/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport LoginScreen from './LoginScreen.jsx';\nimport Sentiment from './Sentiment';\nimport Header from './Header';\nimport useToken, { removeToken } from './useToken'; // Import removeToken\nimport { BrowserRouter as Router, Routes, Route, useNavigate // Import useNavigate\n} from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    token,\n    setToken\n  } = useToken();\n  const navigate = useNavigate(); // Initialize navigate\n\n  useEffect(() => {\n    // Check if the token is set\n    if (token) {\n      // If the token is set, trigger the redirection\n      navigate('/Sentiment');\n    }\n  }, [token, navigate]); // Watch for changes in the \"token\" state and navigate function\n\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post('/token', {\n        email,\n        password\n      });\n      const accessToken = response.data.access_token;\n\n      // Set the token\n      setToken(accessToken);\n    } catch (error) {\n      // Handle login error\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          token: removeToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Sentiment\",\n            element: /*#__PURE__*/_jsxDEV(Sentiment, {\n              token: token,\n              setToken: setToken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), !token && /*#__PURE__*/_jsxDEV(LoginScreen, {\n          setToken: (email, password) => handleLogin(email, password)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G4ycafKDCPLaqQmy9/ulZ+De9Sc=\", false, function () {\n  return [useToken, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","axios","LoginScreen","Sentiment","Header","useToken","removeToken","BrowserRouter","Router","Routes","Route","useNavigate","jsxDEV","_jsxDEV","App","_s","token","setToken","navigate","handleLogin","email","password","response","post","accessToken","data","access_token","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/jaymerjacob/Documents/Sentiment-Analysis/flask-app/react-app/src/components/App.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport LoginScreen from './LoginScreen.jsx';\nimport Sentiment from './Sentiment';\nimport Header from './Header';\nimport useToken, { removeToken } from './useToken'; // Import removeToken\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useNavigate, // Import useNavigate\n} from 'react-router-dom';\n\nfunction App() {\n  const { token, setToken } = useToken();\n  const navigate = useNavigate(); // Initialize navigate\n\n  useEffect(() => {\n    // Check if the token is set\n    if (token) {\n      // If the token is set, trigger the redirection\n      navigate('/Sentiment');\n    }\n  }, [token, navigate]); // Watch for changes in the \"token\" state and navigate function\n\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await axios.post('/token', { email, password });\n      const accessToken = response.data.access_token;\n\n      // Set the token\n      setToken(accessToken);\n    } catch (error) {\n      // Handle login error\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"App\">\n          <Header token={removeToken} />\n\n          <Routes>\n            <Route\n              exact\n              path=\"/Sentiment\"\n              element={<Sentiment token={token} setToken={setToken} />}\n            />\n          </Routes>\n\n          {!token && (\n            <LoginScreen\n              setToken={(email, password) => handleLogin(email, password)}\n            />\n          )}\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}