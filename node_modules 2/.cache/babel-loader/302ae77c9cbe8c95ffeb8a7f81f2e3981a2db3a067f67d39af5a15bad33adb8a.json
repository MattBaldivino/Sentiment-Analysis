{"ast":null,"code":"var _jsxFileName = \"/Users/jaymerjacob/Documents/Sentiment-Analysis/flask-app/react-app/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport LoginScreen from \"./LoginScreen.jsx\";\nimport RegisterScreen from './RegisterScreen.jsx';\nimport Sentiment from './Sentiment';\nimport Header from './Header';\nimport useToken from './useToken';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*Router basically allows us to navigate between components. Without it, the url would change but the \n  corresponding components would not render*/\n\n  const {\n    token,\n    removeToken,\n    setToken\n  } = useToken();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          token: removeToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), !token && token !== \"\" && token !== undefined ? /*#__PURE__*/_jsxDEV(Login, {\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {\n                token: token,\n                setToken: setToken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 6\n  }, this);\n}\n_s(App, \"CruCKIdCgePdb3U3c41doECwnOs=\", false, function () {\n  return [useToken];\n});\n_c = App;\nexport default App;\n\n//move the following into the top of the App() function to make API requests\n\n/*const [getMessage, setGetMessage] = useState({});\n\n   useEffect(()=>{\n     axios.get('http://localhost:5000/flask/hello').then(response => {\n       console.log(\"SUCCESS\", response);\n       setGetMessage(response);\n     }).catch(error => {\n       console.log(error);\n     })\n \n   }, [])*/\n\n//can move the following into App div to display API messages\n\n{/* <header className=\"App-header\">\n         <div>{getMessage.status === 200 ? \n           <h3>{getMessage.data.message}</h3>\n           :\n           <h3>LOADING</h3>}</div>\n       </header> */}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","LoginScreen","RegisterScreen","Sentiment","Header","useToken","BrowserRouter","Router","Routes","Route","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","removeToken","setToken","className","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined","Login","exact","path","element","Profile","_c","$RefreshReg$"],"sources":["/Users/jaymerjacob/Documents/Sentiment-Analysis/flask-app/react-app/src/components/App.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport LoginScreen from \"./LoginScreen.jsx\";\nimport RegisterScreen from './RegisterScreen.jsx';\nimport Sentiment from './Sentiment';\nimport Header from './Header'\nimport useToken from './useToken'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\n\nfunction App() {\n  /*Router basically allows us to navigate between components. Without it, the url would change but the \n  corresponding components would not render*/\n\n  const { token, removeToken, setToken } = useToken();\n\n   return (\n     <div className=\"App\">\n        <BrowserRouter>\n          <div className=\"App\">\n            <Header token={removeToken}/>\n              {!token && token!==\"\" &&token!== undefined?  \n          <Login setToken={setToken} />\n        :(\n          <>\n            <Routes>\n              <Route exact path=\"/profile\" element={<Profile token={token} setToken={setToken}/>}></Route>\n            </Routes>\n          </>\n        )}\n          </div>\n    </BrowserRouter>\n        \n        \n       \n       \n       \n       \n     </div>\n   );\n   \n}\n\nexport default App;\n\n\n//move the following into the top of the App() function to make API requests\n\n/*const [getMessage, setGetMessage] = useState({});\n\n   useEffect(()=>{\n     axios.get('http://localhost:5000/flask/hello').then(response => {\n       console.log(\"SUCCESS\", response);\n       setGetMessage(response);\n     }).catch(error => {\n       console.log(error);\n     })\n \n   }, [])*/\n\n//can move the following into App div to display API messages\n\n{/* <header className=\"App-header\">\n         <div>{getMessage.status === 200 ? \n           <h3>{getMessage.data.message}</h3>\n           :\n           <h3>LOADING</h3>}</div>\n       </header> */}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,QAAQ,QACH,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;AACF;;EAEE,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAElD,oBACEO,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eACjBT,OAAA,CAACN,aAAa;MAAAe,QAAA,eACZT,OAAA;QAAKQ,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAClBT,OAAA,CAACR,MAAM;UAACa,KAAK,EAAEC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EAC1B,CAACR,KAAK,IAAIA,KAAK,KAAG,EAAE,IAAGA,KAAK,KAAIS,SAAS,gBAC9Cd,OAAA,CAACe,KAAK;UAACR,QAAQ,EAAEA;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE7Bb,OAAA,CAAAE,SAAA;UAAAO,QAAA,eACET,OAAA,CAACJ,MAAM;YAAAa,QAAA,eACLT,OAAA,CAACH,KAAK;cAACmB,KAAK;cAACC,IAAI,EAAC,UAAU;cAACC,OAAO,eAAElB,OAAA,CAACmB,OAAO;gBAACd,KAAK,EAAEA,KAAM;gBAACE,QAAQ,EAAEA;cAAS;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF;QAAC,gBACT,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOV,CAAC;AAGX;AAACT,EAAA,CA/BQD,GAAG;EAAA,QAI+BV,QAAQ;AAAA;AAAA2B,EAAA,GAJ1CjB,GAAG;AAiCZ,eAAeA,GAAG;;AAGlB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,mBALC;AAKmB,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}