{"ast":null,"code":"var _jsxFileName = \"/Users/jaymerjacob/Documents/Sentiment-Analysis/flask-app/react-app/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport LoginScreen from \"./LoginScreen.jsx\";\nimport RegisterScreen from './RegisterScreen.jsx';\nimport Login from \"./Login.js\";\nimport Sentiment from './Sentiment';\nimport Header from './Header';\nimport useToken from './useToken';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*Router basically allows us to navigate between components. Without it, the url would change but the \n  corresponding components would not render*/\n\n  const {\n    token,\n    removeToken,\n    setToken\n  } = useToken();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          token: removeToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), !token && token !== \"\" && token !== undefined ?\n        /*#__PURE__*/\n        // If \"token\" is falsy or an empty string or undefined, display the LoginScreen component\n        _jsxDEV(LoginScreen, {\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // If \"token\" is truthy, display the following components\n        _jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/Sentiment\"\n              // Render the Sentiment component and pass it \"token\" and \"setToken\" props\n              ,\n              element: /*#__PURE__*/_jsxDEV(Sentiment, {\n                token: token,\n                setToken: setToken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CruCKIdCgePdb3U3c41doECwnOs=\", false, function () {\n  return [useToken];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","LoginScreen","RegisterScreen","Login","Sentiment","Header","useToken","BrowserRouter","Router","Routes","Route","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","removeToken","setToken","className","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/jaymerjacob/Documents/Sentiment-Analysis/flask-app/react-app/src/components/App.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport LoginScreen from \"./LoginScreen.jsx\";\nimport RegisterScreen from './RegisterScreen.jsx';\nimport Login from \"./Login.js\";\nimport Sentiment from './Sentiment';\nimport Header from './Header'\nimport useToken from './useToken'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\n\nfunction App() {\n  /*Router basically allows us to navigate between components. Without it, the url would change but the \n  corresponding components would not render*/\n\n  const { token, removeToken, setToken } = useToken();\n\n  return (\n    <div className=\"App\">\n      {/* Set up React Router for routing */}\n      <Router>\n        <div className=\"App\">\n          {/* Display the Header component and pass it a \"token\" prop with the value \"removeToken\" */}\n          <Header token={removeToken} />\n  \n          {/* Conditional rendering based on the \"token\" variable, basically an if else staement here. */}\n          {!token && token !== \"\" && token !== undefined ? (\n            // If \"token\" is falsy or an empty string or undefined, display the LoginScreen component\n            <LoginScreen setToken={setToken} />\n          ) : (\n            // If \"token\" is truthy, display the following components\n            <>\n              {/* Set up routes */}\n              <Routes>\n                {/* Define a route with the exact path \"/Sentiment\" */}\n                <Route\n                  exact\n                  path=\"/Sentiment\"\n                  // Render the Sentiment component and pass it \"token\" and \"setToken\" props\n                  element={<Sentiment token={token} setToken={setToken} />}\n                ></Route>\n              </Routes>\n            </>\n          )}\n        </div>\n      </Router>\n    </div>\n  );\n   \n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,QAAQ,QACH,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;AACF;;EAEE,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAEnD,oBACEO,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eAElBT,OAAA,CAACL,MAAM;MAAAc,QAAA,eACLT,OAAA;QAAKQ,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAElBT,OAAA,CAACR,MAAM;UAACa,KAAK,EAAEC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAG7B,CAACR,KAAK,IAAIA,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAKS,SAAS;QAAA;QAC5C;QACAd,OAAA,CAACZ,WAAW;UAACmB,QAAQ,EAAEA;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAA;QAEnC;QACAb,OAAA,CAAAE,SAAA;UAAAO,QAAA,eAEET,OAAA,CAACJ,MAAM;YAAAa,QAAA,eAELT,OAAA,CAACH,KAAK;cACJkB,KAAK;cACLC,IAAI,EAAC;cACL;cAAA;cACAC,OAAO,eAAEjB,OAAA,CAACT,SAAS;gBAACc,KAAK,EAAEA,KAAM;gBAACE,QAAQ,EAAEA;cAAS;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,gBACT,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGV;AAACT,EAAA,CAtCQD,GAAG;EAAA,QAI+BV,QAAQ;AAAA;AAAAyB,EAAA,GAJ1Cf,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}