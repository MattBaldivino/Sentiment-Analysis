{"ast":null,"code":"var _jsxFileName = \"/Users/jaymerjacob/Documents/Sentiment-Analysis/flask-app/react-app/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport useToken from \"./useToken.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm(props) {\n  _s();\n  const {\n    token,\n    removeToken,\n    setToken\n  } = useToken();\n  const [loginForm, setloginForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleEmailChange = event => {\n    setloginForm({\n      ...loginForm,\n      email: event.target.value\n    });\n  };\n  const handlePasswordChange = event => {\n    setloginForm({\n      ...loginForm,\n      password: event.target.value\n    });\n  };\n  const logMeIn = event => {\n    event.preventDefault(); // Prevent the default form submission\n\n    axios({\n      method: \"POST\",\n      url: \"/token\",\n      data: {\n        email: loginForm.email,\n        password: loginForm.password\n      }\n    }).then(response => {\n      props.setToken(response.data.access_token);\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n\n    // Optionally reset the form fields\n    setloginForm({\n      email: \"\",\n      password: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: logMeIn,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        //   type=\"email\" \n        placeholder: \"Enter email\",\n        value: loginForm.email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Enter password\",\n        value: loginForm.password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      className: \"rounded-pill login-button\",\n      size: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/RegisterScreen\",\n      children: props.registerText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"IDS7yI9wl/XO5JM4z4xS61CUQjc=\", false, function () {\n  return [useToken];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Button","Form","Link","axios","useToken","jsxDEV","_jsxDEV","LoginForm","props","_s","token","removeToken","setToken","loginForm","setloginForm","email","password","handleEmailChange","event","target","value","handlePasswordChange","logMeIn","preventDefault","method","url","data","then","response","access_token","catch","error","console","log","status","headers","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","onChange","type","variant","size","buttonText","to","registerText","_c","$RefreshReg$"],"sources":["/Users/jaymerjacob/Documents/Sentiment-Analysis/flask-app/react-app/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport useToken from \"./useToken.js\"\n\nfunction LoginForm(props) {\n    const { token, removeToken, setToken } = useToken();\n    const [loginForm, setloginForm] = useState({\n        email: \"\",\n        password: \"\"\n      })\n  \n    \n\n      const handleEmailChange = (event) => {\n        setloginForm({\n            ...loginForm,\n            email: event.target.value\n        });\n    };\n    \n    const handlePasswordChange = (event) => {\n        setloginForm({\n            ...loginForm,\n            password: event.target.value\n        });\n    };\n    \n    const logMeIn = (event) => {\n        event.preventDefault(); // Prevent the default form submission\n\n        axios({\n            method: \"POST\",\n            url: \"/token\",\n            data: {\n                email: loginForm.email,\n                password: loginForm.password\n            }\n        })\n        .then((response) => {\n            props.setToken(response.data.access_token);\n        }).catch((error) => {\n            if (error.response) {\n                console.log(error.response)\n                console.log(error.response.status)\n                console.log(error.response.headers)\n            }\n        });\n\n        // Optionally reset the form fields\n        setloginForm(({\n            email: \"\",\n            password: \"\"}))\n    };\n\n    return (\n        <Form onSubmit={logMeIn}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label><h5>Email Address</h5></Form.Label>\n                <Form.Control \n                //   type=\"email\" \n                  placeholder=\"Enter email\" \n                  value={loginForm.email} \n                  onChange={handleEmailChange} \n                />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label><h5>Password</h5></Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  placeholder=\"Enter password\" \n                  value={loginForm.password} \n                  onChange={handlePasswordChange} \n                />\n            </Form.Group>\n            <br></br>\n            <Button variant=\"primary\" type=\"submit\" className=\"rounded-pill login-button\" size=\"sm\">\n                <p>{props.buttonText}</p>\n            </Button>\n\n            <Link to=\"/RegisterScreen\">{props.registerText}</Link>\n        </Form>\n    );\n}\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}